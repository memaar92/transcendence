server {
    listen 443 ssl;
    listen [::]:443 ssl; # ipv6only=on;
    listen 80;  
    listen [::]:80; # ipv6only=on;

    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;

    server_name localhost;

    ssl_protocols TLSv1.2 TLSv1.3;
    client_max_body_size 100M;

    location / {
        root /var/www/html/frontend;
        index index.html;
        try_files $1 /index.html =404;
    }

    location /api {
        proxy_pass              http://backend:8000;
        proxy_set_header        Host $host;
        proxy_http_version      1.1;
        proxy_set_header        Upgrade $http_upgrade;
        proxy_set_header        Connection 'upgrade';
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_cache_bypass      $http_upgrade;
        proxy_set_header        Origin $http_origin;

        #add_header 'Access-Control-Allow-Origin' '*' always; this is handled by Django corsheaders and is not needed here (it will cause CORS error in some cases. Might also be the case for the others)
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
    }

    location /pong {
        proxy_pass              http://backend:8000;
        proxy_set_header        Host $host;
        proxy_http_version      1.1;
        proxy_set_header        Upgrade $http_upgrade;
        proxy_set_header        Connection 'upgrade';
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_cache_bypass      $http_upgrade;
        proxy_set_header        Origin $http_origin;

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
    }

    location /admin {
        proxy_pass              http://backend:8000;
        proxy_set_header        Host $host;
        proxy_http_version      1.1;
        proxy_set_header        Upgrade $http_upgrade;
        proxy_set_header        Connection 'upgrade';
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_cache_bypass      $http_upgrade;
        proxy_set_header        Origin $http_origin;

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
    }

    location /ws {
        proxy_pass http://backend:8000; 
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Adjust the proxy_read_timeout as needed
        proxy_read_timeout 86400; # 1 day to avoid websocket timeout
    }

	location /routes {
		root /var/www/html/frontend;
    }

    location /js {
        root /var/www/html/frontend;
    }

    location /css {
        root /var/www/html/frontend;
    }
    
    location /static {
        alias /app/backend/static/; # Currently only to serve django admin page
    }
	location /mediafiles {
        alias /var/www/html/mediafiles; # to serve static mediafiles (profile pictures)
    }
}
